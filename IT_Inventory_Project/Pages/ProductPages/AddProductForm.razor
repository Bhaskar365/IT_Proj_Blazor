@page "/addProductForm"
@using IT_Inventory_Project.Data
@using Newtonsoft.Json
@using System.ComponentModel.DataAnnotations;
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
@inject HttpClient Http

<div class="container text-center">ADD NEW PRODUCT </div>

<EditForm Model="@device_Add" OnValidSubmit="AddData">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Type</label>
    <InputText class="form-control" placeholder="Token"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Token">
         </InputText>
        <ValidationMessage For="()=>device_Add.Token"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Type</label>
        <div>
            <InputSelect class="form-control" placeholder="Device Type"
                       aria-describedby="basic-addon1" @bind-Value="@device_Add.DevType">
                @foreach (var option in DeviceOptions)
                {
                    <option value="@option.OptionValue">@option.OptionName</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>device_Add.DevType"></ValidationMessage>
        </div>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Type Other</label>
        <InputText class="form-control" placeholder="DevTypeOther"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.DevTypeOther">
        </InputText>
        <ValidationMessage For="()=>device_Add.DevTypeOther"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Make</label>
        <InputText class="form-control" placeholder="Make"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Make">
        </InputText>
        <ValidationMessage For="()=>device_Add.Make"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Model</label>
        <InputText class="form-control" placeholder="Model"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Model">
        </InputText>
        <ValidationMessage For="()=>device_Add.Model"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Owner</label>
        <InputText class="form-control" placeholder="Owner"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Owner">
        </InputText>
        <ValidationMessage For="()=>device_Add.Owner"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Location</label>
        <InputText class="form-control" placeholder="Owner"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Location">
        </InputText>
        <ValidationMessage For="()=>device_Add.Location"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Serial</label>
        <InputText class="form-control" placeholder="Owner"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Serial">
        </InputText>
        <ValidationMessage For="()=>device_Add.Serial"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Purchase Date</label>
        <div>
            <InputDate class="form-control" placeholder="Device Purchase Date"
                       aria-describedby="basic-addon1" @bind-Value="@device_Add.PurchaseDate"></InputDate>
            <ValidationMessage For="()=>device_Add.PurchaseDate"></ValidationMessage>
        </div>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Warranty Expiry Date</label>
        <div>
            <InputDate class="form-control" placeholder="Device Expiry Date"
                       aria-describedby="basic-addon1" @bind-Value="@device_Add.WarrantyExpDate"></InputDate>
            <ValidationMessage For="()=>device_Add.WarrantyExpDate"></ValidationMessage>
        </div>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Warranty Service Expiry Date</label>
        <div>
            <InputDate class="form-control" placeholder="Device ServiceExpDate Date"
                       aria-describedby="basic-addon1" @bind-Value="@device_Add.ServiceExpDate"></InputDate>
            <ValidationMessage For="()=>device_Add.ServiceExpDate"></ValidationMessage>
        </div>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Value</label>
        <InputText class="form-control" placeholder="Value"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Value">
        </InputText>
        <ValidationMessage For="()=>device_Add.Value"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Size</label>
        <InputText class="form-control" placeholder="Size"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Size">
        </InputText>
        <ValidationMessage For="()=>device_Add.Size"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device Toner</label>
        <InputText class="form-control" placeholder="Toner"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.Toner">
        </InputText>
        <ValidationMessage For="()=>device_Add.Toner"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device MacAddress</label>
        <InputText class="form-control" placeholder="MacAddress"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.MacAddress">
        </InputText>
        <ValidationMessage For="()=>device_Add.MacAddress"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device IPAddress</label>
        <InputText class="form-control" placeholder="IPAddress"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.IPAddress">
        </InputText>
        <ValidationMessage For="()=>device_Add.IPAddress"></ValidationMessage>
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">Device CellNumber</label>
        <InputText class="form-control" placeholder="CellNumber"
               aria-describedby="basic-addon1" @bind-Value="@device_Add.CellNumber">
        </InputText>
        <ValidationMessage For="()=>device_Add.CellNumber"></ValidationMessage>
    </div>

    <div class="mb-2">
        <button class="btn btn-primary" type="submit">Submit</button>
        <button class="btn btn-secondary" type="reset">Reset</button>
    </div>

</EditForm>

@code {

    Device_Add device_Add = new Device_Add();


    private async Task AddData()
    {
            var tokenKey = new[]
                {
                new KeyValuePair<string,string>("token",device_Add.Token),
                new KeyValuePair<string,string>("DevType",device_Add.DevType),
                new KeyValuePair<string,string>("DevTypeOther",device_Add.DevTypeOther),
                new KeyValuePair<string,string>("Make",device_Add.Make),
                new KeyValuePair<string,string>("Model",device_Add.Model),
                new KeyValuePair<string,string>("Owner",device_Add.Owner),
                new KeyValuePair<string,string>("Location",device_Add.Location),
                new KeyValuePair<string,string>("Serial",device_Add.Serial),
                new KeyValuePair<string,string>("PurchaseDate",device_Add.PurchaseDate.ToString("MM/dd/yyyy HH:mm:ss")),
                new KeyValuePair<string,string>("WarrantyExpDate",device_Add.WarrantyExpDate.ToString("MM/dd/yyyy HH:mm:ss")),
                new KeyValuePair<string,string>("ServiceExpDate",device_Add.ServiceExpDate.ToString("MM/dd/yyyy HH:mm:ss")),
                new KeyValuePair<string,string>("Value",device_Add.Value.ToString()),
                new KeyValuePair<string,string>("Size",device_Add.Size.ToString()),
                new KeyValuePair<string,string>("Toner",device_Add.Toner.ToString()),
                new KeyValuePair<string,string>("MacAddress",device_Add.MacAddress.ToString()),
                new KeyValuePair<string,string>("IPAddress",device_Add.IPAddress.ToString()),
                new KeyValuePair<string,string>("CellNumber",device_Add.CellNumber.ToString())
                };



            string apiUrl = "https://tools.brandinstitute.com/wsInventory/wsInventory.asmx/Device_Add";

            var httpResponse = await Http.PostAsync(apiUrl, new FormUrlEncodedContent(tokenKey));


            if (httpResponse.IsSuccessStatusCode)
            {
                InventoryAPIResponse inventoryAPIResponseData = JsonConvert.DeserializeObject<InventoryAPIResponse>(await httpResponse.Content.ReadAsStringAsync());
                await Task.Run(() => JSRuntime.InvokeVoidAsync("alert", $"'{inventoryAPIResponseData.Msg}','{inventoryAPIResponseData.Total}','{inventoryAPIResponseData.Data}'"));
                NavManager.NavigateTo("/", true);
            }
        }
 
    

    List<DeviceTypeOptions> DeviceOptions = new List<DeviceTypeOptions>()
    {
        new DeviceTypeOptions() {  OptionName = "Select...", OptionValue = " " },
        new DeviceTypeOptions() {  OptionName = "Laptop/Desktop", OptionValue = "Laptop/Desktop" },
        new DeviceTypeOptions() {  OptionName = "Misc", OptionValue = "Misc" },
        new DeviceTypeOptions() {  OptionName = "Mobile Phone", OptionValue = "Mobile Phone" },
        new DeviceTypeOptions() {  OptionName = "Monitor", OptionValue = "Monitor" },
        new DeviceTypeOptions() {  OptionName = "Polycom", OptionValue = "Polycom" },
        new DeviceTypeOptions() {  OptionName = "Printer", OptionValue = "Printer" },
        new DeviceTypeOptions() {  OptionName = "Server", OptionValue = "Server" },
    };


}
